
apply plugin: 'java'

sourceCompatibility = 1.6
targetCompatibility = 1.6

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    
ext {
	gapiVersion = '1.22.0'
}

dependencies {
    compile project(':gdx-gameservices')
        
    compile "com.google.apis:google-api-services-games:v1-rev239-$gapiVersion"
    compile "com.google.oauth-client:google-oauth-client-jetty:$gapiVersion"
    compile "com.google.apis:google-api-services-drive:v3-rev77-$gapiVersion"

    testCompile project(path: ':gdx-gameservices', configuration: 'demo')
    testCompile "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    testCompile "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    testCompile "net.spookygames.gdx:gdx-nativefilechooser-desktop:1.0.0"
}

apply plugin: 'maven-publish'

// Demo
ext.demoClass = "net.spookygames.gdx.gameservices.demo.googleplay.GdxGameservicesGooglePlayDemoDesktop"

task demo(dependsOn: classes, type: JavaExec) {
    main = demoClass
    classpath = sourceSets.test.runtimeClasspath
    standardInput = System.in
    ignoreExitValue = true
}

task demoJar(type: Jar) {
    baseName = "${project.name}-demo"

    from files(sourceSets.main.output.classesDirs)
    from sourceSets.test.output
    from {configurations.compile.collect {zipTree(it)}}
    from {configurations.testCompile.collect {zipTree(it)}}

    manifest {
        attributes 'Main-Class': demoClass
    }
}

// Javadoc
task javadocJar (type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// Sources
task sourcesJar (type : Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar
        }
    }
}

apply from: '../license.gradle'
license.includes(["**/*.java"])

apply from: '../publish.gradle'
bintray.publications = ['maven']

