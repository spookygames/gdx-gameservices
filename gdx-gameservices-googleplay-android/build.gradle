
plugins {
    id 'maven-publish'
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion 26

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 26
    }
    
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }
    
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
        }
    }
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

dependencies {
    api project(':gdx-gameservices')
    api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
    api 'com.google.android.gms:play-services-games:11.0.4'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    destinationDir = file("../javadoc/")
    failOnError false
}

// Javadoc
task javadocJar (type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

// Sources
task sourcesJar (type : Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

apply from: '../license.gradle'
license.excludes(["**/*.xml", "**/BuildConfig.java", "**/R.java"])

apply from: '../publish.gradle'
bintray.configurations = ['archives']
bintrayUpload.dependsOn build

// Because the components are created only during the afterEvaluate phase, you must
// configure your publications using the afterEvaluate() lifecycle method.
afterEvaluate {
    publishing {
        publications {
            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release
                artifact javadocJar
                artifact sourcesJar
            }
        }
    }
}
